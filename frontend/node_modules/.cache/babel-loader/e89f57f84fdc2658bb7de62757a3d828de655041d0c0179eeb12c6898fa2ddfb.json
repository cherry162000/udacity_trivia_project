{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DINESH K\\\\Triva API\\\\frontend\\\\src\\\\components\\\\QuestionView.js\";\nimport React, { Component } from 'react';\nimport '../stylesheets/App.css';\nimport Question from './Question';\nimport Search from './Search';\nimport $ from 'jquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass QuestionView extends Component {\n  constructor() {\n    super();\n    this.getQuestions = () => {\n      $.ajax({\n        url: `/questions?page=${this.state.page}`,\n        //TODO: update request URL\n        type: 'GET',\n        success: result => {\n          this.setState({\n            questions: result.questions,\n            totalQuestions: result.total_questions,\n            categories: result.categories,\n            currentCategory: result.current_category\n          });\n          return;\n        },\n        error: error => {\n          alert('Unable to load questions. Please try your request again');\n          return;\n        }\n      });\n    };\n    this.getByCategory = id => {\n      $.ajax({\n        url: `/categories/${id}/questions`,\n        //TODO: update request URL\n        type: 'GET',\n        success: result => {\n          this.setState({\n            questions: result.questions,\n            totalQuestions: result.total_questions,\n            currentCategory: result.current_category\n          });\n          return;\n        },\n        error: error => {\n          alert('Unable to load questions. Please try your request again');\n          return;\n        }\n      });\n    };\n    this.submitSearch = searchTerm => {\n      $.ajax({\n        url: `/questions`,\n        //TODO: update request URL\n        type: 'POST',\n        dataType: 'json',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          searchTerm: searchTerm\n        }),\n        xhrFields: {\n          withCredentials: true\n        },\n        crossDomain: true,\n        success: result => {\n          this.setState({\n            questions: result.questions,\n            totalQuestions: result.total_questions,\n            currentCategory: result.current_category\n          });\n          return;\n        },\n        error: error => {\n          alert('Unable to load questions. Please try your request again');\n          return;\n        }\n      });\n    };\n    this.questionAction = id => action => {\n      if (action === 'DELETE') {\n        if (window.confirm('are you sure you want to delete the question?')) {\n          $.ajax({\n            url: `/questions/${id}`,\n            //TODO: update request URL\n            type: 'DELETE',\n            success: result => {\n              this.getQuestions();\n            },\n            error: error => {\n              alert('Unable to load questions. Please try your request again');\n              return;\n            }\n          });\n        }\n      }\n    };\n    this.state = {\n      questions: [],\n      page: 1,\n      totalQuestions: 0,\n      categories: {},\n      currentCategory: null\n    };\n  }\n  componentDidMount() {\n    this.getQuestions();\n  }\n  selectPage(num) {\n    this.setState({\n      page: num\n    }, () => this.getQuestions());\n  }\n  createPagination() {\n    let pageNumbers = [];\n    let maxPage = Math.ceil(this.state.totalQuestions / 10);\n    for (let i = 1; i <= maxPage; i++) {\n      pageNumbers.push( /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `page-num ${i === this.state.page ? 'active' : ''}`,\n        onClick: () => {\n          this.selectPage(i);\n        },\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this));\n    }\n    return pageNumbers;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categories-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          onClick: () => {\n            this.getQuestions();\n          },\n          children: \"Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.keys(this.state.categories).map(id => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              this.getByCategory(id);\n            },\n            children: [this.state.categories[id], /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"category\",\n              alt: `${this.state.categories[id].toString().toLowerCase()}`,\n              src: `${this.state.categories[id].toString().toLowerCase()}.svg`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Search, {\n          submitSearch: this.submitSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), this.state.questions.map((q, ind) => /*#__PURE__*/_jsxDEV(Question, {\n          question: q.question,\n          answer: q.answer,\n          category: this.state.categories[q.category],\n          difficulty: q.difficulty,\n          questionAction: this.questionAction(q.id)\n        }, q.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination-menu\",\n          children: this.createPagination()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default QuestionView;","map":{"version":3,"names":["React","Component","Question","Search","$","QuestionView","constructor","getQuestions","ajax","url","state","page","type","success","result","setState","questions","totalQuestions","total_questions","categories","currentCategory","current_category","error","alert","getByCategory","id","submitSearch","searchTerm","dataType","contentType","data","JSON","stringify","xhrFields","withCredentials","crossDomain","questionAction","action","window","confirm","componentDidMount","selectPage","num","createPagination","pageNumbers","maxPage","Math","ceil","i","push","render","Object","keys","map","toString","toLowerCase","q","ind","question","answer","category","difficulty"],"sources":["C:/Users/DINESH K/Triva API/frontend/src/components/QuestionView.js"],"sourcesContent":["import React, { Component } from 'react';\nimport '../stylesheets/App.css';\nimport Question from './Question';\nimport Search from './Search';\nimport $ from 'jquery';\n\nclass QuestionView extends Component {\n  constructor() {\n    super();\n    this.state = {\n      questions: [],\n      page: 1,\n      totalQuestions: 0,\n      categories: {},\n      currentCategory: null,\n    };\n  }\n\n  componentDidMount() {\n    this.getQuestions();\n  }\n\n  getQuestions = () => {\n    $.ajax({\n      url: `/questions?page=${this.state.page}`, //TODO: update request URL\n      type: 'GET',\n      success: (result) => {\n        this.setState({\n          questions: result.questions,\n          totalQuestions: result.total_questions,\n          categories: result.categories,\n          currentCategory: result.current_category,\n        });\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load questions. Please try your request again');\n        return;\n      },\n    });\n  };\n\n  selectPage(num) {\n    this.setState({ page: num }, () => this.getQuestions());\n  }\n\n  createPagination() {\n    let pageNumbers = [];\n    let maxPage = Math.ceil(this.state.totalQuestions / 10);\n    for (let i = 1; i <= maxPage; i++) {\n      pageNumbers.push(\n        <span\n          key={i}\n          className={`page-num ${i === this.state.page ? 'active' : ''}`}\n          onClick={() => {\n            this.selectPage(i);\n          }}\n        >\n          {i}\n        </span>\n      );\n    }\n    return pageNumbers;\n  }\n\n  getByCategory = (id) => {\n    $.ajax({\n      url: `/categories/${id}/questions`, //TODO: update request URL\n      type: 'GET',\n      success: (result) => {\n        this.setState({\n          questions: result.questions,\n          totalQuestions: result.total_questions,\n          currentCategory: result.current_category,\n        });\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load questions. Please try your request again');\n        return;\n      },\n    });\n  };\n\n  submitSearch = (searchTerm) => {\n    $.ajax({\n      url: `/questions`, //TODO: update request URL\n      type: 'POST',\n      dataType: 'json',\n      contentType: 'application/json',\n      data: JSON.stringify({ searchTerm: searchTerm }),\n      xhrFields: {\n        withCredentials: true,\n      },\n      crossDomain: true,\n      success: (result) => {\n        this.setState({\n          questions: result.questions,\n          totalQuestions: result.total_questions,\n          currentCategory: result.current_category,\n        });\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load questions. Please try your request again');\n        return;\n      },\n    });\n  };\n\n  questionAction = (id) => (action) => {\n    if (action === 'DELETE') {\n      if (window.confirm('are you sure you want to delete the question?')) {\n        $.ajax({\n          url: `/questions/${id}`, //TODO: update request URL\n          type: 'DELETE',\n          success: (result) => {\n            this.getQuestions();\n          },\n          error: (error) => {\n            alert('Unable to load questions. Please try your request again');\n            return;\n          },\n        });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className='question-view'>\n        <div className='categories-list'>\n          <h2\n            onClick={() => {\n              this.getQuestions();\n            }}\n          >\n            Categories\n          </h2>\n          <ul>\n            {Object.keys(this.state.categories).map((id) => (\n              <li\n                key={id}\n                onClick={() => {\n                  this.getByCategory(id);\n                }}\n              >\n                {this.state.categories[id]}\n                <img\n                  className='category'\n                  alt={`${this.state.categories[id].toString().toLowerCase()}`}\n                  src={`${this.state.categories[id].toString().toLowerCase()}.svg`}\n                />\n              </li>\n            ))}\n          </ul>\n          <Search submitSearch={this.submitSearch} />\n        </div>\n        <div className='questions-list'>\n          <h2>Questions</h2>\n          {this.state.questions.map((q, ind) => (\n            <Question\n              key={q.id}\n              question={q.question}\n              answer={q.answer}\n              category={this.state.categories[q.category]}\n              difficulty={q.difficulty}\n              questionAction={this.questionAction(q.id)}\n            />\n          ))}\n          <div className='pagination-menu'>{this.createPagination()}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default QuestionView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}